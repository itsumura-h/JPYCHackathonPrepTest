/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  AbstractJPYCQuizRewardNFTCommon,
  AbstractJPYCQuizRewardNFTCommonInterface,
} from "../AbstractJPYCQuizRewardNFTCommon";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "invalidCaller_",
        type: "address",
      },
    ],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "invalidEligibleCaller_",
        type: "address",
      },
    ],
    name: "InvalidEligibleCaller",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousEligibleCaller_",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newEligibleCaller_",
        type: "address",
      },
    ],
    name: "EligibleCallerTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getQuizEligiblity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "enum IJPYCQuizCommon.QuizStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newElilgibleCaller_",
        type: "address",
      },
    ],
    name: "transferEligibleCaller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class AbstractJPYCQuizRewardNFTCommon__factory {
  static readonly abi = _abi;
  static createInterface(): AbstractJPYCQuizRewardNFTCommonInterface {
    return new utils.Interface(
      _abi
    ) as AbstractJPYCQuizRewardNFTCommonInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AbstractJPYCQuizRewardNFTCommon {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AbstractJPYCQuizRewardNFTCommon;
  }
}
